package fr.unice.polytech.qgl.qae.strategy.ground;

import fr.unice.polytech.qgl.qae.actions.AbstractAction;
import fr.unice.polytech.qgl.qae.actions.Stop;
import fr.unice.polytech.qgl.qae.actions.flyActions.withparams.Direction;
import fr.unice.polytech.qgl.qae.actions.groundActions.withparams.Exploit;
import fr.unice.polytech.qgl.qae.map.Map;
import fr.unice.polytech.qgl.qae.map.geometry.Coordinates;
import fr.unice.polytech.qgl.qae.map.tile.GroundTile;
import fr.unice.polytech.qgl.qae.resources.Contract;
import fr.unice.polytech.qgl.qae.resources.ResourceTile;
import fr.unice.polytech.qgl.qae.strategy.AbstractPhase;
import fr.unice.polytech.qgl.qae.strategy.AbstractStrategy;

import java.util.ArrayList;


/**
 * Created by user on 26/12/15.
 */
public class ExploitPhase extends AbstractPhase {

    boolean complete;

    public ExploitPhase(AbstractStrategy parent, Coordinates currents_coords, Direction d, Map m) {
        super(parent, currents_coords, d, m);
        complete = false;

        if(parent.getMission().getBudget() < 50) {
            actions.add(new Stop());
        }

        GroundTile t = map.getGroundmap().getTile(currents_coords);

        for (int i = 0; i < parent.getMission().getContracts().size(); i++) {
            //ResourceTile resObj = parent.getMission().getContracts().get(i);
            ArrayList<Contract> resources = parent.getMission().getContracts();
            for (ResourceTile r : t.getRessource()) {
                if (resources.get(i).getResourceName().equals(r.getResourceName())) {
                   actions.add(new Exploit(r.getResourceName()));
                }
            }
        }
        complete = true;
    }

    public AbstractPhase getNext() {
        if(actions.isEmpty() && complete)
            return new ScoutPhase(parent,currents_coords,d,map);
        else
            return  this;
    }


    @Override
    public AbstractAction execute() {
        return actions.get(0);
    }

}