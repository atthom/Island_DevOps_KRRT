package fr.unice.polytech.qgl.qae.strategy.ground;

import fr.unice.polytech.qgl.qae.actions.flyActions.withparams.Direction;
import fr.unice.polytech.qgl.qae.actions.groundActions.withparams.Exploit;
import fr.unice.polytech.qgl.qae.map.geometry.Coordinates;
import fr.unice.polytech.qgl.qae.map.tile.GroundTile;
import fr.unice.polytech.qgl.qae.strategy.AbstractStrategy;
import fr.unice.polytech.qgl.qae.strategy.fly.FlyingStrategy;
import org.junit.Before;
import org.junit.Test;

import java.util.ArrayList;

import static org.junit.Assert.assertEquals;

/**
 * Created by user on 16/01/16.
 */
public class ExploitPhaseTest {

   /* AbstractStrategy ex;
    ExploitPhase ep;

    Coordinates c;
    GroundTile g1,g2,g3,g4;
    ArrayList<PrimaryResource> contract;

    @Before
    public void setUp() {
        contract = new ArrayList<>();
        contract.add(new PrimaryResource(15,"WOOD"));
        contract.add(new PrimaryResource(15,"FUR"));

        ob = new Objectif(10,150,contract);

        m = new Map();
        g1 = new GroundTile();
        g1.addRes(new PrimaryResource(5,"WOOD"));
        g2 = new GroundTile();
        g2.addRes(new PrimaryResource(5,"FISH"));
        g3 = new GroundTile();
        g3.addRes(new PrimaryResource(5,"FISH"));
        g4 = new GroundTile();
        g4.addRes(new PrimaryResource(5,"WOOD"));

        m.getGroundmap().put(new Coordinates(0,1),g1);
        m.getGroundmap().put(new Coordinates(1,0),g2);
        m.getGroundmap().put(new Coordinates(0,-1),g3);
        m.getGroundmap().put(new Coordinates(-1,0),g4);

        c = new Coordinates(0,1);

        ex = new FlyingStrategy(Direction.S, ob);
        ep = new ExploitPhase(ex,c,Direction.S,m);

    }

    @Test
    public void testExecute() {
        assertEquals(new Exploit("WOOD"),ep.execute());
        assertEquals(ep,ep.getNext());
        ep.actions.remove(0);

    }*/
}
